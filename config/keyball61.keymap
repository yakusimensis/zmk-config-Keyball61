#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESC         &kp N1     &kp N2        &kp N3        &kp N4  &kp N5                                            &kp F1    &kp F2    &kp F3  &kp F4    &kp F5       &kp BSPC
&kp TAB         &kp Q      &kp W         &kp E         &kp R   &kp T                                             &kp Y     &kp U     &kp I   &kp O     &kp P        &kp DELETE
&kp CAPS        &kp A      &kp S         &kp D         &kp F   &kp G                                             &kp H     &mkp MB1  &kp K   &mkp MB2  &mkp MB3     &kp ENTER
&kp LEFT_SHIFT  &kp Z      &kp X         &kp C         &kp V   &kp B        &kp PAGE_DOWN  &lt 1 K_CONTEXT_MENU  &kp HOME  &kp END   &kp M   &kp DOT   &kp FSLH     &kp LEFT_SHIFT
&none           &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &mo 6   &lt 4 SPACE  &mo 5          &kp SPACE             &mo 2                                 &kp AT_SIGN  &mo 5
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                       &kp ESCAPE     &kp N7         &kp N8     &kp N9             &kp N0  &trans
&trans  &trans    &trans    &trans  &trans     &trans                       &kp LC(F)      &kp LC(D)      &kp LC(Y)  &kp LEFT_BRACKET   &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                       &kp LC(W)      &kp LC(LS(T))  &kp LC(Z)  &kp RIGHT_BRACKET  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans       &trans         &trans         &trans     &trans             &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &kp LG(TAB)  &kp LC(LS(L))                                               &trans  &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                     &kp F6               &kp F7           &kp F8             &kp F9           &kp F10    &kp F11
&trans  &trans           &trans        &trans        &trans        &trans                          &trans               &kp PAGE_UP      &kp UP_ARROW       &kp PAGE_DOWN    &kp LC(V)  &kp F12
&trans  &bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                          &kp LA(RIGHT_ARROW)  &kp LEFT_ARROW   &kp DOWN_ARROW     &kp RIGHT_ARROW  &kp LC(C)  &kp ENTER
&trans  &trans           &trans        &trans        &trans        &trans       &trans  &trans     &kp LA(LEFT_ARROW)   &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans           &kp LC(X)  &trans
&trans  &trans           &trans        &trans        &trans        &trans       &trans  &kp SPACE  &trans                                                                    &trans     &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                  &trans    &trans          &trans          &trans           &trans    &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                  &trans    &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &trans    &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                  &trans    &mkp MB1        &kp DOWN_ARROW  &mkp MB2         &mkp MB3  &kp LC(ENTER)
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &kp HOME  &kp PAGE_DOWN   &kp PAGE_UP     &kp END          &trans    &trans
&trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                                                     &trans    &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans                  &trans  &trans    &trans  &trans    &trans    &trans
&trans  &trans    &trans    &trans  &trans     &trans                  &trans  &trans    &trans  &trans    &trans    &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &trans  &mkp MB1  &trans  &mkp MB2  &mkp MB3  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans                              &trans    &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };
    };
};
